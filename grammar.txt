<program0> <program> DOLLAR
<program> <moduleDeclarations> <otherModules> <driverModule> <otherModules>
<moduleDeclarations> <moduleDeclaration> <moduleDeclarations>
<moduleDeclarations> EPSILON 
<moduleDeclaration> DECLARE MODULE ID SEMICOL
<otherModules> <module> <otherModules> 
<otherModules> EPSILON 
<driverModule> DRIVERDEF DRIVER PROGRAM DRIVERENDDEF <moduleDef>
<module> DEF MODULE ID ENDDEF TAKES INPUT SQBO <input_plist> SQBC SEMICOL <ret> <moduleDef>
<ret> RETURNS SQBO <output_plist> SQBC SEMICOL 
<ret> EPSILON
<input_plist> ID COLON <dataType> <input_plist2>
<input_plist2> COMMA ID COLON <dataType> <input_plist2>
<input_plist2> EPSILON
<output_plist> ID COLON <type> <output_plist2>
<output_plist2> COMMA ID COLON <type> <output_plist2>
<output_plist2> EPSILON
<dataType> ARRAY SQBO <range_arrays> SQBC OF <type> 
<range_arrays> <index_arr> RANGEOP <index_arr> 
<dataType> INTEGER
<dataType> REAL
<dataType> BOOLEAN
<type> INTEGER
<type> REAL
<type> BOOLEAN
<moduleDef> START <statements> END
<statements> <statement> <statements>
<statements> EPSILON
<statement> <ioStmt>
<statement> <simpleStmt>
<statement> <declareStmt>
<statement> <conditionalStmt>
<statement> <iterativeStmt>
<ioStmt> GET_VALUE BO ID BC SEMICOL 
<ioStmt> PRINT BO <var_print> BC SEMICOL
<var_print> ID <p1>
<var_print> NUM
<var_print> RNUM
<var_print> <boolConstt>
<boolConstt> TRUE
<boolConstt> FALSE
<p1> SQBO <index_arr> SQBC
<p1> EPSILON
<simpleStmt> <assignmentStmt> 
<simpleStmt> <moduleReuseStmt>
<assignmentStmt> ID <whichStmt>
<whichStmt> <lvalueIDStmt> 
<whichStmt> <lvalueARRStmt>
<lvalueIDStmt> ASSIGNOP <expression> SEMICOL
<lvalueARRStmt> SQBO <element_index_with_expressions> SQBC ASSIGNOP <expression> SEMICOL
<index_arr> <sign> <new_index>
<new_index> NUM
<new_index> ID
<sign> PLUS
<sign> MINUS 
<sign> EPSILON 
<moduleReuseStmt> <optional> USE MODULE ID WITH PARAMETERS <actual_para_list> SEMICOL
<optional> SQBO <idList> SQBC ASSIGNOP
<optional> EPSILON
<actual_para_list> <sign> <k> <actual_para_list2>
<actual_para_list2> COMMA <k> <actual_para_list2>
<actual_para_list2> COMMA <sign> <k> <actual_para_list2>
<actual_para_list2> EPSILON
<k> NUM
<k> RNUM
<k> <boolConstt>
<k> ID <n_11>
<idList> ID <idList2>
<idList2> COMMA ID <idList2>
<idList2> EPSILON
<expression> <arithmeticOrBooleanExpr> 
<expression> <u> 
<u> <unary_op> <new_NT>
<new_NT> BO <arithmeticExpr> BC
<new_NT> <var_id_num>
<var_id_num> ID
<var_id_num> NUM
<var_id_num> RNUM
<unary_op> PLUS 
<unary_op> MINUS
<arithmeticOrBooleanExpr> <anyTerm> <arithmeticOrBooleanExpr2>
<arithmeticOrBooleanExpr2> <logicalOp> <anyTerm> <arithmeticOrBooleanExpr2>
<arithmeticOrBooleanExpr2> EPSILON
<anyTerm> <arithmeticExpr> <anyTerm2> 
<anyTerm> <boolConstt>
<anyTerm2> <relationalOp> <arithmeticExpr>
<anyTerm2> EPSILON 
<arithmeticExpr> <term> <arithmeticExpr2>
<arithmeticExpr2> <op1> <term> <arithmeticExpr2>
<arithmeticExpr2> EPSILON
<term> <factor> <term2>
<term2> <op2> <factor> <term2>
<term2> EPSILON
<factor> BO <arithmeticOrBooleanExpr> BC
<factor> NUM
<factor> RNUM 
<factor> <boolConstt> 
<factor> ID <n_11>
<n_11> SQBO <element_index_with_expressions> SQBC
<n_11> EPSILON 
<element_index_with_expressions> <sign> <n_10> 
<element_index_with_expressions> <arrExpr>
<n_10> <new_index> 
<n_10> BO <arrExpr> BC
<arrExpr> <arrTerm> <arr_N4>
<arr_N4> <op1> <arrTerm> <arr_N4>
<arr_N4> EPSILON 
<arrTerm> <arrFactor> <arr_N5>
<arr_N5> <op2> <arrFactor> <arr_N5>
<arr_N5> EPSILON 
<arrFactor> ID
<arrFactor> NUM
<arrFactor> <boolConstt> 
<arrFactor> BO <arrExpr> BC
<op1> PLUS
<op1> MINUS
<op2> MUL
<op2> DIV
<logicalOp> AND
<logicalOp> OR 
<relationalOp> LT
<relationalOp> LE
<relationalOp> GT
<relationalOp> GE
<relationalOp> EQ 
<relationalOp> NE
<declareStmt> DECLARE <idList> COLON <dataType> SEMICOL
<conditionalStmt> SWITCH BO ID BC START <caseStmts> <default> END
<caseStmts> CASE <value> COLON <statements> BREAK SEMICOL <caseStmts2>
<caseStmts2> CASE <value> COLON <statements> BREAK SEMICOL <caseStmts2>
<caseStmts2> EPSILON
<value> NUM
<value> TRUE
<value> FALSE
<default> DEFAULT COLON <statements> BREAK SEMICOL
<default> EPSILON
<iterativeStmt> FOR BO ID IN <range_for_loop> BC START <statements> END
<iterativeStmt> WHILE BO <arithmeticOrBooleanExpr> BC START <statements> END
<range_for_loop> <index_for_loop> RANGEOP <index_for_loop>
<index_for_loop> <sign_for_loop> <new_index_for_loop>
<new_index_for_loop> NUM
<sign_for_loop> PLUS
<sign_for_loop> MINUS 
<sign_for_loop> EPSILON